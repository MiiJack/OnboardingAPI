openapi: 3.0.3
info:
  title: OnboardingAPI
  version: 1.3.0
  description: API for student management
  contact:
    email: hei.miranto.2@gmail.com
servers:
  - url: http://std22079.com
tags:
  - name: students
    description: Everything about your Students
  - name: teachers
    description: Everything about your Teachers
paths:
  /teachers:
    get:
      tags :
        - teachers
      summary: Returns a list of teachers
      description: Returns a list of teachers as an array
      responses:
        '200':
          description: A list of teacher successfully returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
    put:
      tags :
        - teachers
      summary: Updates a teacher
      description: Updates a teacher's information
      requestBody:
        description: Updates a teacher's information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '200':
          description: Teacher updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
  /students:
    get:
      tags : 
        - students
      summary: Returns a list of student
      responses:
        '200':
          description: A list of student successfully returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
    post:
      tags :
        - students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      summary: Creates a new student
      description: Creates a new student
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
    put:
      tags:
        - students
      summary: Updates a student
      description: Updates a student's information
      requestBody:
        description: Updates a student's information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
  /students/{studentId}:
    delete:
      tags:
        - students
      summary: Deletes a student
      description: Deletes a student by its Id
      parameters:
        - name: studentId
          in: path
          description: ID of student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid student value
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Rakoto
        birthdate:
          type: string
          format: date
          example: 2001-02-01
    Teacher:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        first_name:
          type: string
          example: Tokimahery
        last_name:
          type: string
          example: Ramarozaka
        courses:
          type: array
          items:
            $ref: "#/components/schemas/Course"
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        courseCode:
          type: string
          example: PROG1
        courseName:
          type: string
          example: Algorithmique
        duration:
          type: string
          format: duration
          example: 20h
